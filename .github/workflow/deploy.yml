name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main  # Change to your deployment branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-southeast-1 | \
          docker login --username AWS --password-stdin 061747058342.dkr.ecr.ap-southeast-1.amazonaws.com
      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names name || \
          aws ecr create-repository --repository-name name
      - name: Build, tag, and push Docker image
        env:
          IMAGE_NAME: product
          IMAGE_TAG: latest
          ECR_URI: 061747058342.dkr.ecr.ap-southeast-1.amazonaws.com/name
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG
      - name: Deploy to ECS
        run: |
          FAMILY_NAME=slt-family
          CLUSTER_NAME=slit
          SERVICE_NAME=service-1
          CONTAINER_NAME=catalog
          REGION=ap-southeast-1
          IMAGE_URI=061747058342.dkr.ecr.ap-southeast-1.amazonaws.com/name:latest
          
          # Save current task definition to a file
          aws ecs describe-task-definition \
            --task-definition $FAMILY_NAME \
            --region $REGION > old-task-def.json
          
          # Extract and update the task definition JSON
          jq --arg IMAGE "$IMAGE_URI" --arg CONTAINER "$CONTAINER_NAME" '
            .taskDefinition |
            {
              family: .family,
              executionRoleArn: .executionRoleArn,
              networkMode: .networkMode,
              containerDefinitions: [.containerDefinitions[] | if .name == $CONTAINER then (.image = $IMAGE) else . end],
              requiresCompatibilities: .requiresCompatibilities,
              cpu: .cpu,
              memory: .memory
            }
          ' old-task-def.json > new-task-def.json
          
          # Register the new task definition
          NEW_REVISION=$(aws ecs register-task-definition \
            --region $REGION \
            --cli-input-json file://new-task-def.json \
            | jq -r '.taskDefinition.taskDefinitionArn')
          
          # Update the ECS service to use the new revision
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --region $REGION \
            --task-definition $NEW_REVISION
